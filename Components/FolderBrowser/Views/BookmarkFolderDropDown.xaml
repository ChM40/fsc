<UserControl x:Class="FolderBrowser.Views.BookmarkFolderDropDown"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             
             xmlns:reskeys="clr-namespace:FolderBrowser.Themes"
             >
    <Grid xmlns:ctrls="clr-namespace:DropDownButtonLib.Controls;assembly=DropDownButtonLib"
          xmlns:dbthemes="clr-namespace:DropDownButtonLib.Themes;assembly=DropDownButtonLib"
          >
        <ctrls:SplitItemsButton
                    ToolTip="{Binding SelectedItem,FallbackValue='Add a recent folder to quick access it here'}"
                    ItemsSource="{Binding DropDownItems}"
                    Command="{Binding ChangeOfDirectoryCommand}"
                    CommandParameter="{Binding SelectedItem}"
                    IsOpen="{Binding IsOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    DropDownMaxHeight="300"
                    xmlns:bindLocal="clr-namespace:FolderBrowser.Views"
                >
            <ctrls:SplitItemsButton.Content>
                <Border BorderBrush="Transparent"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch">
                    <Image Source="{DynamicResource FLV_Image_IsFoldersVisible}" Width="16" Margin="3"/>
                </Border>
            </ctrls:SplitItemsButton.Content>
            <ctrls:DropDownItemsButton.Resources>
                <!-- Use a proxy to bind items to root object of this collection -->
                <bindLocal:BindingProxy  x:Key="DropDownItemsButtonProxy" Data="{Binding}" />
            </ctrls:DropDownItemsButton.Resources>
            <ctrls:DropDownItemsButton.ItemTemplate>
                <DataTemplate>
                    <Grid Name="MyBorder" Margin="0" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Button Content="-" Grid.Column="0"
                                ToolTip="Remove Folder Bookmark"
                                Command="{Binding Path=Data.RemoveFolderBookmark, Source={StaticResource DropDownItemsButtonProxy}}"
                                CommandParameter="{Binding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" Margin="0" Padding="3,0"
                                MinWidth="16" MinHeight="16"
                                x:Name="RemoveFolderBookmarkButton">
                        </Button>

                        <Button Content="{Binding DisplayName}"
                                Command="{Binding Path=Data.ChangeOfDirectoryCommand, Source={StaticResource DropDownItemsButtonProxy}}"
                                CommandParameter="{Binding}"
                                Grid.Column="1"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Left"
                                BorderBrush="Transparent"
                                Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.DialogForegroundKey}}"
                                ToolTip="{Binding FullPath}"
                                Margin="3,0,0,0"
                                >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Padding="3,0"
                                                        >
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                      />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static dbthemes:ResourceKeys.ButtonMouseOverBackgroundKey}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!-- TextBlock Margin="0,0,3,0" Grid.Column="1" HorizontalAlignment="Stretch">
                            <TextBlock.Resources>
                                <Style TargetType="{x:Type Hyperlink}" x:Key="FolderBookmarkHyperlinkStyle">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="Black" />
                                            <Setter Property="Cursor"     Value="Arrow"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled"   Value="false">
                                            <Setter Property="Cursor" Value="Arrow"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="true">
                                            <Setter Property="Cursor" Value="Arrow"/>
                                        </Trigger>
                                    </Style.Triggers>
                                    <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Style>
                            </TextBlock.Resources>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Cursor" Value="Arrow"/>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static dbthemes:ResourceKeys.ButtonMouseOverBackgroundKey}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style -->

                        <!-- A hyperlink in disguise without change of mouse pointer or underline indicator  -
                            <Hyperlink Command="{Binding Path=Data.ChangeOfDirectoryCommand, Source={StaticResource DropDownItemsButtonProxy}}"
                                       CommandParameter="{Binding}"
                                       Style="{StaticResource FolderBookmarkHyperlinkStyle}">- Send this item for processing to the bound command -
                                <TextBlock Text="{Binding DisplayName}"
                                            Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.DialogForegroundKey}}"
                                            ToolTip="{Binding FullPath}" Margin="6,0,3,0" />
                            </Hyperlink>                        
                            </TextBlock-->
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=MyBorder, Path=IsMouseOver}" Value="True" >
                            <Setter TargetName="RemoveFolderBookmarkButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=MyBorder, Path=IsMouseOver}" Value="False" >
                            <Setter TargetName="RemoveFolderBookmarkButton" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ctrls:DropDownItemsButton.ItemTemplate>
        </ctrls:SplitItemsButton>
    </Grid>
</UserControl>
